// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
  ext.kotlin_version = "1.3.72"

  repositories {
    google()
    jcenter()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:4.1.0"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

allprojects {
  repositories {
    mavenCentral()
    jcenter()
    google()

    def found = false
    def defaultDir = null
    def androidSourcesName = 'React Native sources'

    if (rootProject.ext.has('reactNativeAndroidRoot')) {
      defaultDir = rootProject.ext.get('reactNativeAndroidRoot')
    } else {
      defaultDir = new File(
        projectDir,
        '/../../../../node_modules/react-native/android'
      )
    }

    if (defaultDir.exists()) {
      maven {
        url defaultDir.toString()
        name androidSourcesName
      }

      logger.info(":${project.name}:reactNativeAndroidRoot ${defaultDir.canonicalPath}")
      found = true
    } else {
      def parentDir = rootProject.projectDir

      1.upto(5, {
        if (found) return true
        parentDir = parentDir.parentFile

        def androidSourcesDir = new File(
          parentDir,
          'node_modules/react-native'
        )

        def androidPrebuiltBinaryDir = new File(
          parentDir,
          'node_modules/react-native/android'
        )

        if (androidPrebuiltBinaryDir.exists()) {
          maven {
            url androidPrebuiltBinaryDir.toString()
            name androidSourcesName
          }

          logger.info(":${project.name}:reactNativeAndroidRoot ${androidPrebuiltBinaryDir.canonicalPath}")
          found = true
        } else if (androidSourcesDir.exists()) {
          maven {
            url androidSourcesDir.toString()
            name androidSourcesName
          }

          logger.info(":${project.name}:reactNativeAndroidRoot ${androidSourcesDir.canonicalPath}")
          found = true
        }
      })
    }

    if (!found) {
      throw new GradleException(
        "${project.name}: unable to locate React Native android sources. " +
          "Ensure you have you installed React Native as a dependency in your project and try again."
      )
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

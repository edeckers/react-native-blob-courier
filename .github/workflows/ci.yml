name: Build and test
on: push

jobs:
  build-typescript:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: ${{ hashFiles('package.json') }}
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - run: yarn install
        if: steps.node_modules.outputs.cache-hit != 'true'
      - run: yarn test
  run-typescript-tests:
    needs: build-typescript
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: ${{ hashFiles('package.json') }}
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - run: yarn install
        if: steps.node_modules.outputs.cache-hit != 'true'
      - run: yarn test
      - uses: actions/upload-artifact@v2
        with:
          name: ts-test-results
          path: output/typescript-test-output.xml
  run-android-unit-tests:
    needs: build-typescript
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: ${{ hashFiles('package.json') }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: yarn install
        if: steps.node_modules.outputs.cache-hit != 'true'
      - uses: eskatos/gradle-command-action@v1
        with:
          build-root-directory: android
          wrapper-directory: android
          arguments: testDebugUnitTest --tests=BlobCourierModuleTests
      - uses: actions/upload-artifact@v2
        with:
          name: android-unit-test-results
          path: android/build/test-results/**/*.xml
  run-android-instrumented-tests:
    continue-on-error: true
    needs: build-typescript
    runs-on: self-hosted
    steps: 
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: ${{ hashFiles('package.json') }}
      # - uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.gradle/caches
      #       ~/.gradle/wrapper
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-
      - run: yarn install
        if: steps.node_modules.outputs.cache-hit != 'true'
      - uses: reactivecircus/android-emulator-runner@v2.13.0
        env:
          ORG_GRADLE_PROJECT_ADB_COMMAND_TIMEOUT_MILLISECONDS: ${{ secrets.ORG_GRADLE_PROJECT_ADB_COMMAND_TIMEOUT_MILLISECONDS }}
          ORG_GRADLE_PROJECT_PROMISE_TIMEOUT_MILLISECONDS: ${{ secrets.ORG_GRADLE_PROJECT_PROMISE_TIMEOUT_MILLISECONDS }}
        with:
          api-level: 30
          script: |
            echo "ORG_GRADLE_PROJECT_PROMISE_TIMEOUT_MILLISECONDS ${ORG_GRADLE_PROJECT_PROMISE_TIMEOUT_MILLISECONDS}"
            adb logcat -c
            adb logcat | tee android_instrumented_logcat.log | grep 'io.deckers.blob_courier' &
            ./gradlew connectedAndroidTest
          target: google_apis
          working-directory: './android' 
      - uses: actions/upload-artifact@v2
        with:
          name: android-instrumented-test-results
          path: android/build/outputs/androidTest-results/connected/flavors/debugAndroidTest/*.xml
        if: always()
      - uses: actions/upload-artifact@v2
        with:
          name: android-instrumented-logcat
          path: android/android_instrumented_logcat.log
        if: always()
  run-ios-tests:
    needs: build-typescript
    runs-on: self-hosted
    steps: 
      - uses: actions/checkout@v2
      - run: xcrun simctl boot "iPhone 11" || true
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: ${{ hashFiles('package.json') }}
      # - uses: actions/cache@v2
      #   with:
      #     path: ios/Pods
      #     key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pods-
      - run: yarn install
        if: steps.node_modules.outputs.cache-hit != 'true'
      - run: cd ios && pod install
      - run: xcodebuild test -scheme BlobCourierTests -destination 'platform=iOS Simulator,name=iPhone 11' -workspace 'ios/BlobCourier.xcworkspace' | xcpretty --report junit
      - uses: actions/upload-artifact@v2
        with:
          name: ios-test-results
          path: build/reports/**/*.xml
  publish-typescript-test-results:
    needs:
      - run-typescript-tests
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/download-artifact@v2
        with:
          name: ts-test-results
          path: report-ts
      - uses: EnricoMi/publish-unit-test-result-action@v1.6
        with:
          check_name: "Tests: TypeScript"
          comment_title: TypeScript Test Report
          deduplicate_classes_by_file_name: false
          files: report-ts/**/*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          hide_comments: all but latest
          report_individual_runs: true
  publish-android-test-results:
    needs:
      - run-android-unit-tests
      - run-android-instrumented-tests
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/download-artifact@v2
        with:
          name: android-unit-test-results
          path: report-android-unit
      - uses: actions/download-artifact@v2
        with:
          name: android-instrumented-test-results
          path: report-android-instrument
      - uses: EnricoMi/publish-unit-test-result-action@v1.6
        with:
          check_name: "Tests: Android - Unit"
          comment_title: Android Unit Test Report
          deduplicate_classes_by_file_name: false
          files: report-android-unit/**/*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          hide_comments: all but latest
          report_individual_runs: true
      - uses: EnricoMi/publish-unit-test-result-action@v1.6
        with:
          check_name: "Tests: Android - Instrumented"
          comment_title: Android Instrumented Test Report
          deduplicate_classes_by_file_name: false
          files: report-android-instrument/**/*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          hide_comments: all but latest
          report_individual_runs: true
  publish-ios-test-results:
    needs:
      - run-ios-tests
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/download-artifact@v2
        with:
          name: ios-test-results
          path: report-ios
      - uses: EnricoMi/publish-unit-test-result-action@v1.6
        with:
          check_name: "Tests: iOS"
          comment_title: iOS Test Report
          deduplicate_classes_by_file_name: false
          files: report-ios/**/*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          hide_comments: all but latest
          report_individual_runs: true

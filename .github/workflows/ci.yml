name: Build and test
on: push

env: 
  node-version: 12
  android-api-level: 30

jobs:
  build-typescript-linux:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: yarn-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.node-version }}
      - run: TARGET=typescript make clean build
        if: steps.node_modules.outputs.cache-hit != 'true'
  build-typescript-macos:
    runs-on: self-hosted
    steps: 
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: yarn-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.node-version }}
      - run: TARGET=typescript make clean build
        if: steps.node_modules.outputs.cache-hit != 'true'
  build-typescript-lint:
    needs:
      - build-typescript-linux
      - build-typescript-macos
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: yarn-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.node-version }}
      - run: TARGET=typescript make lint
  run-typescript-tests:
    needs: build-typescript-lint
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: yarn-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.node-version }}
      - run: TARGET=typescript make test
      - uses: actions/upload-artifact@v2
        with:
          name: ts-test-results
          path: output/typescript-test-output.xml
  run-android-lint:
    needs:
      - build-typescript-linux
      - build-typescript-macos
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: yarn-${{ hashFiles('**/yarn.lock') }}
      - run: TARGET=android make clean lint
  run-android-unit-tests:
    needs: run-android-lint
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: yarn-${{ hashFiles('**/yarn.lock') }}
      - run: TARGET=android:unit make clean test
      - uses: actions/upload-artifact@v2
        with:
          name: android-unit-test-results
          path: android/build/test-results/**/*.xml
  run-android-instrumented-tests:
    needs: run-android-lint
    continue-on-error: true
    runs-on: self-hosted
    steps: 
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: yarn-${{ hashFiles('**/yarn.lock') }}
      - uses: reactivecircus/android-emulator-runner@v2.13.0
        env:
          ORG_GRADLE_PROJECT_ADB_COMMAND_TIMEOUT_MILLISECONDS: ${{ secrets.ORG_GRADLE_PROJECT_ADB_COMMAND_TIMEOUT_MILLISECONDS }}
          ORG_GRADLE_PROJECT_PROMISE_TIMEOUT_MILLISECONDS: ${{ secrets.ORG_GRADLE_PROJECT_PROMISE_TIMEOUT_MILLISECONDS }}
          TARGET: android:instrumented
        with:
          api-level: ${{ env.android-api-level }}
          script: |
            adb logcat -c
            adb logcat | tee android_instrumented_logcat.log | grep 'io.deckers.blob_courier' &
            make clean test
          target: google_apis
      - uses: actions/upload-artifact@v2
        with:
          name: android-instrumented-test-results
          path: android/build/outputs/androidTest-results/connected/flavors/debugAndroidTest/*.xml
        if: always()
      - uses: actions/upload-artifact@v2
        with:
          name: android-instrumented-logcat
          path: android_instrumented_logcat.log
        if: always()
  run-ios-lint:
    needs:
      - build-typescript-linux
      - build-typescript-macos
    runs-on: self-hosted
    steps: 
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: yarn-${{ hashFiles('**/yarn.lock') }}
      - run: TARGET=ios make lint
  run-ios-tests:
    needs: run-ios-lint
    runs-on: self-hosted
    steps: 
      - uses: actions/checkout@v2
      - run: xcrun simctl boot "iPhone 11" || true
      - uses: actions/cache@v2
        id: node_modules
        with:
          path: node_modules
          key: yarn-${{ hashFiles('**/yarn.lock') }}
      - run: cd ios && pod install
      - run: TARGET=ios make clean test
      - uses: actions/upload-artifact@v2
        with:
          name: ios-test-results
          path: build/reports/**/*.xml
  publish-typescript-test-results:
    needs:
      - run-typescript-tests
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/download-artifact@v2
        with:
          name: ts-test-results
          path: report-ts
      - uses: EnricoMi/publish-unit-test-result-action@v1.6
        with:
          check_name: "Tests: TypeScript"
          comment_title: TypeScript Test Report
          deduplicate_classes_by_file_name: false
          files: report-ts/**/*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          hide_comments: all but latest
          report_individual_runs: true
  publish-android-test-results:
    needs:
      - run-android-unit-tests
      - run-android-instrumented-tests
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/download-artifact@v2
        with:
          name: android-unit-test-results
          path: report-android-unit
      - uses: actions/download-artifact@v2
        with:
          name: android-instrumented-test-results
          path: report-android-instrument
      - uses: EnricoMi/publish-unit-test-result-action@v1.6
        with:
          check_name: "Tests: Android - Unit"
          comment_title: Android Unit Test Report
          deduplicate_classes_by_file_name: false
          files: report-android-unit/**/*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          hide_comments: all but latest
          report_individual_runs: true
      - uses: EnricoMi/publish-unit-test-result-action@v1.6
        with:
          check_name: "Tests: Android - Instrumented"
          comment_title: Android Instrumented Test Report
          deduplicate_classes_by_file_name: false
          files: report-android-instrument/**/*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          hide_comments: all but latest
          report_individual_runs: true
  publish-ios-test-results:
    needs:
      - run-ios-tests
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/download-artifact@v2
        with:
          name: ios-test-results
          path: report-ios
      - uses: EnricoMi/publish-unit-test-result-action@v1.6
        with:
          check_name: "Tests: iOS"
          comment_title: iOS Test Report
          deduplicate_classes_by_file_name: false
          files: report-ios/**/*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}
          hide_comments: all but latest
          report_individual_runs: true
